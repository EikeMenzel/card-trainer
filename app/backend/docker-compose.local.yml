version: "3"
services:
  db:
    container_name: postgres-swtp-project
    ports:
      - "5433:5432"
    image: postgres:14.1-alpine
    restart: unless-stopped
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql

    networks:
      - postgres-network
    user: postgres
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - "16543:80"
    networks:
      - postgres-network
    depends_on:
      - db
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    volumes:
      - ./database/servers.json:/pgadmin4/servers.json
      - ./database/devdbpass:/pgadmin4/devdbpass

  db-service:
    container_name: db-service
    image: git-registry.thm.de/swtp-suess/ws-23/card-trainer/dev/database-service:latest
    ports:
      - "8086:8086"
    networks:
      - postgres-network
    depends_on:
      - db
    restart: unless-stopped

  auth:
    container_name: auth-service
    image: git-registry.thm.de/swtp-suess/ws-23/card-trainer/dev/authentication-service:latest
    ports:
      - "8080:8080"
    networks:
      - postgres-network
    depends_on:
      - db-service
    restart: unless-stopped

  achievment:
    container_name: achievement-service
    image: git-registry.thm.de/swtp-suess/ws-23/card-trainer/dev/achievement-service:latest
    ports:
      - "8085:8085"
    networks:
      - postgres-network
    depends_on:
      - db-service
    restart: unless-stopped

  cards:
    container_name: cards-service
    image: git-registry.thm.de/swtp-suess/ws-23/card-trainer/dev/cards-service:latest
    ports:
      - "8082:8082"
    networks:
      - postgres-network
    depends_on:
      - db-service
    restart: unless-stopped

  gateway:
    container_name: gateway-service
    image: git-registry.thm.de/swtp-suess/ws-23/card-trainer/dev/gateway:latest
    networks:
      - postgres-network
      - proxy
    depends_on:
      - db-service
      - cards
      - auth
      - email
      - user
      - frontend
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cards.entrypoints=http"
      - "traefik.http.routers.cards.rule=Host(`cards.${DOMAIN}`)"
      - "traefik.http.middlewares.cards-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.cards.middlewares=cards-https-redirect"
      - "traefik.http.routers.cards-secure.entrypoints=https"
      - "traefik.http.routers.cards-secure.rule=Host(`cards.${DOMAIN}`)"
      - "traefik.http.routers.cards-secure.tls=true"
      - "traefik.http.routers.cards-secure.tls.certresolver=netcup"
      - "traefik.http.routers.cards-secure.service=cards"
      - "traefik.http.services.cards.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"

  email:
    container_name: email-service
    image: git-registry.thm.de/swtp-suess/ws-23/card-trainer/dev/mail-service:latest
    ports:
      - "8081:8081"
    networks:
      - postgres-network
    depends_on:
      - db-service
    restart: unless-stopped

  user:
    container_name: user-service
    image: git-registry.thm.de/swtp-suess/ws-23/card-trainer/dev/user-service:latest
    ports:
      - "8083:8083"
    networks:
      - postgres-network
    depends_on:
      - db-service
    restart: unless-stopped

  session:
    container_name: session-service
    image: git-registry.thm.de/swtp-suess/ws-23/card-trainer/dev/session-service:latest
    ports:
      - "8084:8084"
    networks:
      - postgres-network
    depends_on:
      - db-service
    restart: unless-stopped


  frontend:
    container_name: frontend
    image: git-registry.thm.de/swtp-suess/ws-23/card-trainer/dev/angular-frontend:latest
    ports:
      - "4200:4200"
    networks:
      - postgres-network
    depends_on:
      - db-service
      - cards
      - user
      - auth
      - email
      - session

networks:
  postgres-network:
    driver: bridge
  proxy:
    external: true